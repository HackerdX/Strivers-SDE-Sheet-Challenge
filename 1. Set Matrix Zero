// 1st approach, TC: O(N*M) SC: O(N+M) (Done by Me)
#include <bits/stdc++.h>

void setZeros(vector<vector<int>> &matrix)
{
	// Write your code here.
	int n = matrix.size(), m = matrix[0].size();
	vector<int> left(n, 0), top(m, 0);
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			if(matrix[i][j] == 0) {
				left[i] = 1;
				top[j] = 1;
			}
		}
	}
	for(int i = 0; i < left.size(); i++){
		if(left[i] == 1){
			for(int j = 0; j < m; j++){
				matrix[i][j] = 0;
			}
		}
	}
	for(int j = 0; j < top.size(); j++){
		if(top[j] == 1){
			for(int i = 0; i < n; i++){
				matrix[i][j] = 0;
			}
		}
	}
}



// 2nd Approach, TC: O(N*M) SC: O(1) (After learning new apprach)
#include <bits/stdc++.h>

void setZeros(vector<vector<int>> &matrix)
{
	// Write your code here.
	int n = matrix.size(), m = matrix[0].size();
	bool firstRow = false, firstCol = false;
	for(int i = 0; i < n; i++){
		if(matrix[i][0] == 0){
			firstCol = true;
			break;
		}
	}
	for(int j = 0; j < m; j++){
		if(matrix[0][j] == 0){
			firstRow = true;
			break;
		}
	}
	
	for(int i = 1; i < n; i++){
		for(int j = 1; j < m; j++){
			if(matrix[i][j] == 0) {
				matrix[i][0] = 0;
				matrix[0][j] = 0;
			}
		}
	}
	
	for(int i = 1; i < n; i++){
		if(matrix[i][0] == 0){
			for(int j = 1; j < m; j++){
				matrix[i][j] = 0;
			}
		}
	}
	for(int j = 1; j < m; j++){
		if(matrix[0][j] == 0){
			for(int i = 1; i < n; i++){
				matrix[i][j] = 0;
			}
		}
	}
	if(firstCol) {
		for(int i = 0; i < n; i++){
			matrix[i][0] = 0;
        }
    }
	if(firstRow) {
		for(int j = 0; j < m; j++){
			matrix[0][j] = 0;
        }
    }
}
